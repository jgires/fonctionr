[{"path":"/articles/changelog.html","id":"fonctionr-0-2-5","dir":"Articles","previous_headings":"","what":"fonctionr 0.2.5","title":"Changelog","text":"Date : 2024-02-18 Implémentation de checks pour vérifier que les variables du design (passées à survey) existent dans data. Les fonctions de créations des palettes (de MoMAColors, MetBrewer et PrettyCols) sont sorties du NAMESPACE pour éviter un bug de collision de noms de fonctions (il y avait un warning au chargement de fonctionr). Cela engage un travail futur de tri de ce qui est importé dans le NAMESPACE et de ce qui ne l’est pas pour désambiguïser le code source.","code":""},{"path":"/articles/changelog.html","id":"fonctionr-0-2-4","dir":"Articles","previous_headings":"","what":"fonctionr 0.2.4","title":"Changelog","text":"Date : 2024-02-17 Implémentation de checks pour vérifier que les variables de many_prop_group() soient bien binaires, et pour éviter les variables à une modalité pour quali_var dans distrib_group_discrete(). Correction d’un bug dans esth_graph().","code":""},{"path":"/articles/changelog.html","id":"fonctionr-0-2-3","dir":"Articles","previous_headings":"","what":"fonctionr 0.2.3","title":"Changelog","text":"Date : 2024-02-17 Implémentation de l’export excel pour many_prop() et many_val_group().","code":""},{"path":"/articles/changelog.html","id":"fonctionr-0-2-2","dir":"Articles","previous_headings":"","what":"fonctionr 0.2.2","title":"Changelog","text":"Date : 2024-02-14 Implémentation du test statistique pour distrib_discrete(). Correction d’un bug découvert à cette occasion, qui empêchait de faire fonctionner distrib_discrete() avec na.rm.group = FALSE.","code":""},{"path":"/articles/changelog.html","id":"fonctionr-0-2-1","dir":"Articles","previous_headings":"","what":"fonctionr 0.2.1","title":"Changelog","text":"Date : 2024-02-14 Amélioration des fonctions internes de vérification de la validité des arguments. Celles-ci renvoient désormais un message plus clair pour l’utilisateur.","code":""},{"path":"/articles/changelog.html","id":"fonctionr-0-2-0","dir":"Articles","previous_headings":"","what":"fonctionr 0.2.0","title":"Changelog","text":"prop_group() : ajout de la possibilité de calculer des proportions en comptant les NA au dénominateur avec l’argument na.var = \"include\". Dans ce cas, l’expression prop_exp peut contenir la fonction .na() pour calculer la proportion de valeurs manquantes. many_val_group() : changement de l’ordre des labels pour que l’ordre des couleurs corresponde à l’ordre sur le graphique. Ajout d’exemples dans la documentation à partir des données SILC inclues dans le package laeken. Correction de bugs mineurs.","code":""},{"path":[]},{"path":[]},{"path":"/articles/changelog.html","id":"en-général","dir":"Articles","previous_headings":"To do list > Prioritaire (nécessités ou bugs)","what":"En général","title":"Changelog","text":"Documenter tous les arguments des différentes fonctions + vérifier que les explications sont bien correctes (quelques erreurs repérées, par ex. à cause de copier-coller, et il manque les descriptions générales des fonctions many_prop() et many_val_group()). Il y également des champs manquants (voir warnings de roxygenise()). Voir ici pour savoir les différentes options possibles dans la doc : https://r-pkgs.org/man.html. L’import des packages extérieurs n’est pas OK : MetBrewer et MoMAColors masquaient des fonctions de base et étaient en conflit (message d’erreur au chargement de fonctionr => résolu). Par ailleurs, il est inutile d’importer tous les packages extérieurs via le NAMESPACE, cela augmenter fortement le risque de collisions de noms de fonctions => un bon résumé ici : https://mdneuzerling.com/post/-ive-learnt--making--r-package/ et pour plus de détails : https://r-pkgs.org/dependencies--practice.html. De plus, certains imports sont absents du squelette roxygen dans certaines fonctions (esth_graph(), mais aussi d’autres => corriger !). Vérifier que les scripts sont bien commentés pour qu’se rappelle ce qu’fait (il manque des notes). Passer le code de chaque fonction en revue à l’occasion de la vérification des commentaires et de la réécriture avec :: pour le choix des fonctions externes (au lieu de les importer) => de gros bugs encore découverts ! (copier-coller de fonctions avec de mauvais noms d’arguments, erreurs qui font bugger le na.rm.group…) Ajouter des exemples pour chaque fonction (pour le site) : manque pivot_longer_survey(), esth_graph(). Bug avec le fichier YML pour pkgdown. Fichiers *.R pas compatibles ASCII => tout écrire en anglais. Vérifier les messages à l’utilisateur : voir quoi garder, corriger, traduire, ajouter des guillemets pour les arguments dans les checks, mieux écrire les résultats des tests stat (ne sait pas quelle est l’hypothèse nulle). Pour les fonctions qui calculent des proportions : ajouter la possibilité que la proportion soit calculée sur l’ensemble des individus (les NA étant comptabilisés dans le dénominateur) => Voir fichier excel avec ordre des arguments.=> Fait pour prop_group(). Mettre des conditions pour réaliser les tests (n min, distribution, variances égales…). Changer la fonction scales::pvalue, qui n’est plus valide (superseded) => Faire une fonction maison en interne. Ajouter des checks pour les inputs : Pas mettre les mêmes colonnes dans les différents arguments ? (group, var_distrib, facet_var, etc.). Les cluster / strates / weights n’apparaissent pas dans le message de la console avec les replicates => pourquoi ? Ajouter n_weight_upp et n_weight_low + harmoniser les noms des colonnes entre fonctions (n vs n_tot, n_weighted vs n_tot_weighted…).=> François : je propose l’ordre suivant : les variables de ventilation, l’indicateur, l’indicateur_low, l’indicateur_up, n_sample, n_true_weighted, n_true_weighted_low, n_true_weighted_upp, n_tot_weighted, n_tot_weighted_low, n_tot_weighted_upp.","code":""},{"path":"/articles/changelog.html","id":"central_group","dir":"Articles","previous_headings":"To do list > Prioritaire (nécessités ou bugs)","what":"central_group","title":"Changelog","text":"Bypasser l’erreur du test stat avec tryCatch().","code":""},{"path":"/articles/changelog.html","id":"prop_group","dir":"Articles","previous_headings":"To do list > Prioritaire (nécessités ou bugs)","what":"prop_group","title":"Changelog","text":"Bypasser l’erreur du test stat avec tryCatch().","code":""},{"path":"/articles/changelog.html","id":"distrib_group_d","dir":"Articles","previous_headings":"To do list > Prioritaire (nécessités ou bugs)","what":"distrib_group_d","title":"Changelog","text":"Implémenter un test stat lorsqu’il y des facets => via modélisation loglinéaire, mais j’ai un peu de mal à comprendre les erreurs de survey (erreurs fréquentes).","code":""},{"path":"/articles/changelog.html","id":"many_prop","dir":"Articles","previous_headings":"To do list > Prioritaire (nécessités ou bugs)","what":"many_prop","title":"Changelog","text":"Ajouter la possibilité de calculer moyennes et médianes.","code":""},{"path":"/articles/changelog.html","id":"many_val_group","dir":"Articles","previous_headings":"To do list > Prioritaire (nécessités ou bugs)","what":"many_val_group","title":"Changelog","text":"Améliorer l’alignement des effectifs avec show_n = T lorsque position == \"stack\" esth_graph Changer le nom. Régler le pb si multiples NA + voir si un pb se pose avec multiples totaux.","code":""},{"path":[]},{"path":"/articles/changelog.html","id":"en-général-1","dir":"Articles","previous_headings":"To do list > Améliorations","what":"En général","title":"Changelog","text":"Pour les checks : mieux préciser les variables incriminées ? Ce n’est pas le cas pour les checks des variables nécessaires ou des variables du design, par ex. Elles ne sont pas nombreuses, mais c’est plus sympa pour l’utilisateur. Optimiser le code dupliqué des pipelines avec summarise() pour central_group() ou many_val_group() : ce sont des quasi copies selon que c’est une médiane / moyenne / etc. => pénible à maintenir, trouver une simplification. Réécrire le code du test pour avoir la formule originale => possible avec eval(), voir code de central_group(). Voir si peut créer une fonction commune à toutes les fonctions du package pour créer le ggplot => ce serait une large simplification. Pour l’instant, il y déjà un thème commun theme_fonctionr. Créer une fonction de check des inputs indispensables (car redondance entre les 4 fonctions)=> Pour l’instant c’est fait “en dur” : difficultés de créer une fonction du fait de l’usage du tidyverse : il faut sans doute utiliser les fonctions de rlang.","code":""},{"path":"/articles/changelog.html","id":"central_group-1","dir":"Articles","previous_headings":"To do list > Améliorations","what":"central_group","title":"Changelog","text":"Pouvoir réordonner avec les facet => solution avec tidytext https://juliasilge.com/blog/reorder-within/","code":""},{"path":"/articles/changelog.html","id":"prop_group-1","dir":"Articles","previous_headings":"To do list > Améliorations","what":"prop_group","title":"Changelog","text":"Pouvoir réordonner avec les facet => solution avec tidytext https://juliasilge.com/blog/reorder-within/","code":""},{"path":"/articles/changelog.html","id":"distrib_group_d-1","dir":"Articles","previous_headings":"To do list > Améliorations","what":"distrib_group_d","title":"Changelog","text":"Ajouter les n par “cellule” ? Ajouter les effectifs totaux par groupe ? (dans le nom du groupe ?) Ajouter un total ? Il faudrait une autre couleur, sinon pas clair => comment faire vu qu’il y la palette de couleur des modalités ?=> Tentative en cours d’utiliser des hachures. Réordonner les levels sur la variable group ? Mais selon quelle valeur (vu qu’il y en plusieurs) ? Celle du premier level de la variable var_distrib ? Possibilité d’indiquer un vecteur avec une palette de couleur pour coller avec le code couleur de notre institution ?","code":""},{"path":[]},{"path":"/articles/changelog.html","id":"filtrage","dir":"Articles","previous_headings":"Notes","what":"Filtrage","title":"Changelog","text":"Il semble qu’il faille filtrer après la déclaration du design. Si ne le fait pas, considère le design sur l’objet filtré (avec moins de PSU / strates qu’il y en en réalité), ce qui sous-estime potentiellement la distribution d’échantillonnage. Voir : https://stats.stackexchange.com/questions/411026/---important--make-survey-design-object-svydesign-function--r--https://notstatschat.rbind.io/2021/07/22/subsets--subpopulations--survey-inference/ => De ce fait, j’ai inclus une option de filtre (filter_exp) dans les fonctions (qui filtre après la déclaration du design), qui évite de filtrer l’objet avant en dégradant le design. => Vérifier que c’est bien OK ! FAIRE : expliquer dans la doc !","code":""},{"path":[]},{"path":"/articles/changelog.html","id":"univarié","dir":"Articles","previous_headings":"Notes > Fonctions à créer","what":"Univarié","title":"Changelog","text":"Densité pour le général (pour variable continue)","code":""},{"path":"/articles/changelog.html","id":"bivarié-ou-3-variables","dir":"Articles","previous_headings":"Notes > Fonctions à créer","what":"Bivarié ou 3 variables+","title":"Changelog","text":"Superposition de 2 statistiques (bar + lines) avec échelles différentes. Tableau croisé avec résidus ou couleur par proportion (proportions par c, l, ou total) Densité par groupe (pour variable continue)","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joel Gires. Author, maintainer. Francois Ghesquiere. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gires J, Ghesquiere F (2024). fonctionr: Package easy manipulation data complex design. R package version 0.2.5.","code":"@Manual{,   title = {fonctionr: Package for easy manipulation of data with complex design},   author = {Joel Gires and Francois Ghesquiere},   year = {2024},   note = {R package version 0.2.5}, }"},{"path":"/index.html","id":"fonctionr-","dir":"","previous_headings":"","what":"Package for easy manipulation of data with complex design","title":"Package for easy manipulation of data with complex design","text":"fonctionr est un package R qui pour de produire facilement des statistiques descriptives complètes à partir de données individuelles issues de sondages avec un design complexe. Le package inclut des fonctions permettant de produire les résultats les plus usuels (comparaison de proportions, de moyennes, de médianes, de distributions), en tenant compte du plan d’échantillonnage réel grâce au package survey. fonctionr l’objectif de faciliter l’inférence statistique : outre des résultats descriptifs, le package produit des intervalles de confiance et des tests statistiques qui prennent en compte de design réel de l’enquête. fonctionr produit également des graphiques des résultats à l’aide de ggplot2, dans le de pouvoir intégrer directement et rapidement les résultats produits dans un rapport/une publication. Vous trouverez sur cette page une rapide introduction à fonctionr ; pour plus de détails, voir les vignettes. Pour comprendre plus en profondeur notre package et toutes ses possibilités, trois vignettes sont disponibles : La vignette Manipulate complex Survey Design explique de quelle manière fonctionr peut prendre en compte le plan d’échantillonnage réel des sondages. La vignette Overview functionr functions décrit avec plus de détails les différentes fonctions de fonctionr. La vignette Ready publication explique la philosophie de fonctionr de produire des résultats directement prêts à l’emploi : à la communication à des tiers ou à la publication.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Package for easy manipulation of data with complex design","text":"Vous pouvez installer le package fonctionr depuis GitHub. Pour cela, il vous faut d’abord installer et charger le package devtools :","code":"# Installer devtools si celui-ci n'est pas installé et charger le package install.packages(\"devtools\") library(devtools)  # Installer fonctionr devtools::install_github(\"jgires/fonctionr\")"},{"path":"/index.html","id":"utilisation","dir":"","previous_headings":"","what":"Utilisation","title":"Package for easy manipulation of data with complex design","text":"Avant toute utilisation, il faut bien entendu charger le package : L’utilisation de fonctionr pour d’être simple. Pour nos exemples, nous utilisons les données de l’enquête SILC pour l’Autriche contenues dans le package laeken. Nous recodons d’abord la variable de statut économique pour la lisibilité des résultats : fonctionr comprend plusieurs fonctions pour réaliser facilement des opérations descriptives courantes. mean_group() permet par exemple de calculer des moyennes de revenu par groupe. Les groupes, ici de statut économique, sont indiqués dans l’argument group. C’est la moyenne du revenu mensuel qui est calculée, car peut indiquer soit une variable quantitative, soit une expression pour calculer celle-ci, directement dans l’argument quanti_exp (dans ce cas la variable eqIncome est divisée par 12 à la volée). Le design de l’enquête SILC est pris en considération, puisque l’peut indiquer les clusters (ids), les strates (strata) et les poids (weight) dans la fonction. Les intervalles de confiance et un test de différence des moyennes sont calculés en conséquence. La fonction produit une liste encapsulant plusieurs résultats dans des objets différents. L’objet tab comprend un data.frame avec les résultats au format tidy : L’objet test.stat comprend les résultats d’un test d’hypothèse prenant en compte le design de l’enquête. Le test pratiqué est dépendant de la statistique calculée. Dans le cas de mean_group(), il s’agit d’une ANOVA avec comme hypothèse nulle l’égalité entre les moyennes de tous les groupes : L’objet graph comprend un graphique ggplot présentant les résultats et prêt à être inséré dans une publication :  fonctionr comprend plusieurs autres fonctions pour réaliser des opérations similaires, par exemple pour calculer des proportions par groupe avec la fonction prop_group(). peut à nouveau indiquer directement une expression à partir de laquelle calculer les proportions dans l’argument prop_exp : dans ce cas la proportion à recevoir des revenus du chômage (py090n supérieurs à 0). Le résultat contient à nouveau un tableau, le résultat d’un test d’hypothèse et un graphique ggplot. Dans le cas de prop_test(), le test d’hypothèse est un khi2 avec comme hypothèse nulle l’égalité de toutes les proportions.","code":"library(fonctionr) # Loading of data data(eusilc, package = \"laeken\")  # Creation of categories of economic status eusilc$pl030_rec <- NA eusilc$pl030_rec[eusilc$pl030 == \"1\"] <- \"Working full time\" eusilc$pl030_rec[eusilc$pl030 == \"2\"] <- \"Working part time\" eusilc$pl030_rec[eusilc$pl030 == \"3\"] <- \"Unemployed\" eusilc$pl030_rec[eusilc$pl030 == \"4\"] <- \"Student\" eusilc$pl030_rec[eusilc$pl030 == \"5\"] <- \"Retired\" eusilc$pl030_rec[eusilc$pl030 == \"6\"] <- \"Permanently disabled\" eusilc$pl030_rec[eusilc$pl030 == \"7\"] <- \"Fulfilling domestic tasks\" eusilc_mean <- mean_group(   eusilc,   group = pl030_rec,   quanti_exp = eqIncome / 12,   strata = db040,   ids = db030,   weight = rb050,   reorder = T,   title = \"Mean of equivalised income in household by status of individuals\",   subtitle = \"Example with austrian SILC data from 'laeken' package\",   ) eusilc_mean$tab #> # A tibble: 8 × 8 #>   pl030_rec            mean mean_low mean_upp n_sample n_weighted n_weighted_low #>   <fct>               <dbl>    <dbl>    <dbl>    <int>      <dbl>          <dbl> #> 1 Fulfilling domesti… 1296.    1253.    1338.     1207    640311.        605978. #> 2 Permanently disabl… 1330.    1202.    1458.      178    104930.         85796. #> 3 Retired             1720.    1681.    1758.     3146   1806954.       1746273. #> 4 Student             1355.    1291.    1419.      736    395829.        365532. #> 5 Unemployed          1456.    1380.    1532.      518    303252.        276953. #> 6 Working full time   1895.    1864.    1926.     5162   2869868.       2797833. #> 7 Working part time   1591.    1542.    1639.     1160    636121.        600709. #> 8 Total               1703.    1679.    1726.    12107   6757264.       6683738. #> # ℹ 1 more variable: n_weighted_upp <dbl> eusilc_mean$test.stat #> Wald test for pl030_rec #>  in svyglm(formula = fmla, design = data_W) #> F =  141.5453  on  6  and  5985  df: p= < 2.22e-16 eusilc_mean$graph eusilc_prop <- prop_group(   eusilc,   group = pl030_rec,   prop_exp = py090n > 0,   strata = db040,   ids = db030,   weight = rb050,   reorder = T,   title = \"Proportion of individuals receiving income from unemployment in their household\",   subtitle = \"Example with austrian SILC data from 'laeken' package\" ) eusilc_prop$tab #> # A tibble: 8 × 11 #>   pl030_rec                   prop prop_low prop_upp n_sample n_true_weighted #>   <fct>                      <dbl>    <dbl>    <dbl>    <int>           <dbl> #> 1 Fulfilling domestic tasks 0.0485   0.0369   0.0624     1207          31048. #> 2 Permanently disabled      0.209    0.148    0.282       178          21975. #> 3 Retired                   0.0177   0.0134   0.0229     3146          31988. #> 4 Student                   0.0194   0.0106   0.0323      736           7666. #> 5 Unemployed                0.732    0.690    0.770       518         221878. #> 6 Working full time         0.0818   0.0741   0.0899     5162         234629. #> 7 Working part time         0.110    0.0921   0.130      1160          69869. #> 8 Total                     0.0916   0.0863   0.0971    12107         619054. #> # ℹ 5 more variables: n_true_weighted_low <dbl>, n_true_weighted_upp <dbl>, #> #   n_tot_weighted <dbl>, n_tot_weighted_low <dbl>, n_tot_weighted_upp <dbl> eusilc_prop$test.stat #>  #>  Pearson's X^2: Rao & Scott adjustment #>  #> data:  NextMethod() #> F = 475.2, ndf = 5.9608, ddf = 35711.0201, p-value < 2.2e-16 eusilc_prop$graph"},{"path":"/index.html","id":"auteurs","dir":"","previous_headings":"","what":"Auteurs","title":"Package for easy manipulation of data with complex design","text":"Joël Girès est sociologue et travaille à l’Observatoire de la Santé et du Social de la Région de Bruxelles-Capitale. François Ghesquière est sociologue et travaille à l’Institut wallon de l’évaluation, de la prospective et de la statistique. Nous sommes ouverts à toute remarque afin d’améliorer notre package.","code":""},{"path":[]},{"path":"/reference/central_group.html","id":null,"dir":"Reference","previous_headings":"","what":"central_group — central_group","title":"central_group — central_group","text":"Function compare means medians different groups complex survey data. produces table, graphic statistical test.","code":""},{"path":"/reference/central_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"central_group — central_group","text":"","code":"central_group(   data,   group,   quanti_exp,   type,   facet_var = NULL,   filter_exp = NULL,   ...,   na.rm.group = T,   reorder = F,   show_ci = T,   show_n = FALSE,   show_value = TRUE,   show_lab = TRUE,   total_name = \"Total\",   digits = 0,   unit = \"\",   dec = \",\",   fill = NULL,   dodge = 0.9,   font = \"Roboto\",   wrap_width_y = 25,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   caption = NULL,   export_path = NULL )  median_group(..., type = \"median\")  mean_group(..., type = \"mean\")"},{"path":"/reference/central_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"central_group — central_group","text":"data dataframe object survey package object srvyr package. group variable defining groups compared. quanti_exp expression define mean/mediam computed. type \"mean\" compute means group ; \"median\" compute medians group. facet_var variable defining faceting group. filter_exp expression filters data, preserving design. ... options possible as_survey_design srvyr package. na.rm.group TRUE want remove observations NA group variable NA facet variable. FALSE want create group NA value group variable facet NA value facet variable. NA variables included quanti_exp affected argument. observation NA variables included quanti_exp excluded. reorder TRUE want reorder groups according mean/median. NA value, case na.rm.group = FALSE, included reorder. show_ci TRUE want show error bars graphic. FALSE want show error bars. show_n TRUE want show graphic number individuals sample group. FALSE want show number. Default FALSE. show_value TRUE want show mean/median group graphic. FALSE want show mean/median show_lab TRUE want show axes, titles caption labels. FALSE want show label axes titles. Default TRUE. total_name Name total bar graphic. Default Total. digits Numbers digits showed values labels graphic. Default 0. unit Unit showed graphic. Default unit. dec Decimal mark shown graphic. Default \",\" fill Colour bars. NA bar, case na.rm.group = FALSE, total bar always grey. dodge Width bar, 0 1. font Font used graphic. Available fonts, included package , \"Roboto\", \"Montserrat\" \"Gotham Narrow\". Default \"Roboto\". wrap_width_y Number characters going line. Applies labels groups. Default 25. title Title graphic. subtitle Subtitle graphic. xlab X label graphic. coord_flip() used graphic, xlab refers x label graphic, coord_flip(), x variable data. ylab Y label graphic. coord_flip() used graphic, xlab refers x label graphic, coord_flip(), x variable data. caption Caption graphic. export_path Path export results xlsx file. file includes two sheets : table graphic.","code":""},{"path":"/reference/central_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"central_group — central_group","text":"list contains table, graphic statistical test","code":""},{"path":"/reference/central_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"central_group — central_group","text":"","code":"# Loading of data data(eusilc, package = \"laeken\")  # Creation of age categories eusilc$age_cat <- cut(eusilc$age, breaks = 6, include.lowest = TRUE)  # Calculation of income means by age category with fonctionr, taking sample design into account eusilc_mean <- mean_group(   eusilc,   group = age_cat,   quanti_exp = eqIncome / 12,   strata = db040,   ids = db030,   weight = rb050,   title = \"Mean of equivalised income in household by age of individuals\",   subtitle = \"Example with austrian SILC data from 'laeken' package\"   ) #> Input: data.frame #> Sampling design -> ids:  db030, strata:  db040, weights:  rb050 #> Variable(s) détectée(s) dans quanti_exp : eqIncome #> 0 lignes supprimées avec valeur(s) manquante(s) pour le(s) variable(s) de quanti_exp eusilc_mean$graph"},{"path":"/reference/distrib_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"distrib_discrete — distrib_discrete","title":"distrib_discrete — distrib_discrete","text":"Function describe distribution discrete variable complex survey data. produces table graphic.","code":""},{"path":"/reference/distrib_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"distrib_discrete — distrib_discrete","text":"","code":"distrib_discrete(   data,   quali_var,   facet_var = NULL,   filter_exp = NULL,   ...,   na.rm.group = T,   probs = NULL,   prop_method = \"beta\",   reorder = FALSE,   show_ci = T,   show_n = FALSE,   show_value = TRUE,   show_lab = TRUE,   scale = 100,   digits = 0,   unit = \"%\",   dec = \",\",   fill = \"sienna2\",   dodge = 0.9,   font = \"Roboto\",   wrap_width_y = 25,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   caption = NULL,   export_path = NULL )  distrib_d(...)"},{"path":"/reference/distrib_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"distrib_discrete — distrib_discrete","text":"data dataframe object survey package object srvyr package. quali_var discrete variable studied. facet_var variable defining faceting group. filter_exp expression filters data, preserving design. ... options possible as_survey_design srvyr package. na.rm.group TRUE want remove NAs quali_var. FALSE want create NA category graphic table. Default TRUE. probs Vector probabilities H0 statistical test, correct order (rescaled sum 1) prop_method Type proportion method use. See svyciprop survey package details. Default beta method. reorder TRUE want reorder categories according proportion. NA value, case na.rm.group = FALSE, included reorder. show_ci TRUE want show error bars graphic. FALSE want show error bars. show_n TRUE want show graphic number individuals sample group. FALSE want show number. Default FALSE. show_value TRUE want show proportion category graphic. FALSE want show proportion. show_lab TRUE want show axes, titles caption labels. FALSE want show label axes titles. Default TRUE. scale Denominator proportion. Default 100 interprets numbers percentages. digits Numbers digits showed values labels graphic. Default 0. unit Unit showed graphic. Default percent. dec Decimal mark shown graphic. Default \",\" fill Colour bars. NA bar, case na.rm.group.group = FALSE, total bar always grey. dodge Width bar, 0 1. font Font used graphic. Available fonts, included package , \"Roboto\", \"Montserrat\" \"Gotham Narrow\". Default \"Roboto\". wrap_width_y Number characters going line. Applies labels categories. Default 25. title Title graphic. subtitle Subtitle graphic. xlab X label graphic. coord_flip() used graphic, xlab refers x label graphic, coord_flip(), x variable data. ylab Y label graphic. coord_flip() used graphic, xlab refers x label graphic, coord_flip(), x variable data. caption Caption graphic. export_path Path export results xlsx file. file includes two sheets : table graphic.","code":""},{"path":"/reference/distrib_discrete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"distrib_discrete — distrib_discrete","text":"list contains table, graphic statistical test","code":""},{"path":"/reference/distrib_discrete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"distrib_discrete — distrib_discrete","text":"","code":"# Loading of data data(eusilc, package = \"laeken\")  # Recoding eusilc$pl030 into eusilc$pl030_rec eusilc$pl030_rec <- NA eusilc$pl030_rec[eusilc$pl030 == \"1\"] <- \"Working full time\" eusilc$pl030_rec[eusilc$pl030 == \"2\"] <- \"Working part time\" eusilc$pl030_rec[eusilc$pl030 == \"3\"] <- \"Unemployed\" eusilc$pl030_rec[eusilc$pl030 == \"4\"] <- \"Student\" eusilc$pl030_rec[eusilc$pl030 == \"5\"] <- \"Retired\" eusilc$pl030_rec[eusilc$pl030 == \"6\"] <- \"Permanently disabled\" eusilc$pl030_rec[eusilc$pl030 == \"7\"] <- \"Fulfilling domestic tasks\"  # Computation, taking sample design into account eusilc_dist_group_d <- distrib_d( eusilc, pl030_rec, strata = db040, ids = db030, weight = rb050, title = \"Distribution of socio-economic status\", subtitle = \"Example with austrian SILC data from 'laeken' package\" ) #> Input: data.frame #> Sampling design -> ids:  db030, strata:  db040, weights:  rb050 eusilc_dist_group_d$graph  eusilc_dist_group_d$tab #> # A tibble: 7 × 8 #>   pl030_rec            prop prop_low prop_upp n_sample n_weighted n_weighted_low #>   <fct>               <dbl>    <dbl>    <dbl>    <int>      <dbl>          <dbl> #> 1 Fulfilling domest… 0.0948   0.0899   0.0998     1207    640311.        605978. #> 2 Permanently disab… 0.0155   0.0129   0.0186      178    104930.         85796. #> 3 Retired            0.267    0.258    0.277      3146   1806954.       1746273. #> 4 Student            0.0586   0.0544   0.0630      736    395829.        365532. #> 5 Unemployed         0.0449   0.0411   0.0489      518    303252.        276953. #> 6 Working full time  0.425    0.416    0.434      5162   2869868.       2797833. #> 7 Working part time  0.0941   0.0890   0.0995     1160    636121.        600709. #> # ℹ 1 more variable: n_weighted_upp <dbl>"},{"path":"/reference/distrib_group_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"distrib_group_discrete — distrib_group_discrete","title":"distrib_group_discrete — distrib_group_discrete","text":"Function describe distribution discrete variable different groups. can use complex survey data. produces table, graphic statistical test.","code":""},{"path":"/reference/distrib_group_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"distrib_group_discrete — distrib_group_discrete","text":"","code":"distrib_group_discrete(   data,   group,   quali_var,   facet_var = NULL,   filter_exp = NULL,   ...,   na.rm.group = T,   prop_method = \"beta\",   show_value = TRUE,   show_lab = TRUE,   scale = 100,   digits = 0,   unit = \"\",   dec = \",\",   pretty_pal = \"Hokusai1\",   direction = 1,   dodge = 0.9,   font = \"Roboto\",   wrap_width_y = 25,   wrap_width_leg = 25,   legend_ncol = 4,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   legend_lab = NULL,   caption = NULL,   export_path = NULL )  distrib_group_d(...)"},{"path":"/reference/distrib_group_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"distrib_group_discrete — distrib_group_discrete","text":"data dataframe object survey package object srvyr package. group variable defining groups compared. quali_var discrete variable studied. facet_var variable defining faceting group. filter_exp expression filters data, preserving design. ... options possible as_survey_design srvyr package. na.rm.group TRUE want remove NAs quali_var, group facet_var. FALSE want create NA categories quali_var, group facet_var. Default TRUE. prop_method Type proportion method use. See svyciprop survey package details. Default beta method. show_value TRUE want show proportion category group graphic. FALSE want show proportion. show_lab TRUE want show axes, titles, caption legend labels. FALSE want show label axes, titles, caption legend. Default TRUE. scale Denominator proportion. Default 100 interprets numbers percentages. digits Numbers digits showed values labels graphic. Default 0. unit Unit showed graphic. Default percent. dec Decimal mark shown graphic. Default \",\" pretty_pal Color palette used graphic. palettes packages MetBrewer, MoMAColors PrettyCols available. direction Direction palette color. Default 1. opposite direction -1. dodge Width bar, 0 1. font Font used graphic. Available fonts, included package , \"Roboto\", \"Montserrat\" \"Gotham Narrow\". Default \"Roboto\". wrap_width_y Number characters going line labels groups. Default 25. wrap_width_leg Number characters going line labels categories. Default 25. legend_ncol Number colomns legend. Default 4. title Title graphic. subtitle Subtitle graphic. xlab X label graphic. coord_flip() used graphic, xlab refers x label graphic, coord_flip(), x variable data. ylab Y label graphic. coord_flip() used graphic, xlab refers x label graphic, coord_flip(), x variable data. legend_lab Legend (fill) label graphic. caption Caption graphic. export_path Path export results xlsx file. file includes two sheets : table graphic.","code":""},{"path":"/reference/distrib_group_discrete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"distrib_group_discrete — distrib_group_discrete","text":"list contains table, graphic statistical test","code":""},{"path":"/reference/distrib_group_discrete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"distrib_group_discrete — distrib_group_discrete","text":"","code":"# Loading of data data(eusilc, package = \"laeken\")  # Recoding eusilc$pl030 into eusilc$pl030_rec eusilc$pl030_rec <- NA eusilc$pl030_rec[eusilc$pl030 == \"1\"] <- \"Working full time\" eusilc$pl030_rec[eusilc$pl030 == \"2\"] <- \"Working part time\" eusilc$pl030_rec[eusilc$pl030 == \"3\"] <- \"Unemployed\" eusilc$pl030_rec[eusilc$pl030 == \"4\"] <- \"Student\" eusilc$pl030_rec[eusilc$pl030 == \"5\"] <- \"Retired\" eusilc$pl030_rec[eusilc$pl030 == \"6\"] <- \"Permanently disabled\" eusilc$pl030_rec[eusilc$pl030 == \"7\"] <- \"Fulfilling domestic tasks\"  # Computation, taking sample design into account eusilc_dist_d <- distrib_group_d( eusilc, group = pb220a, quali_var = pl030_rec, strata = db040, ids = db030, weight = rb050, title = \"Distribution of socio-economic status according to nationality\", subtitle = \"Example with austrian SILC data from 'laeken' package\" ) #> Input: data.frame #> Sampling design -> ids:  db030, strata:  db040, weights:  rb050 #> Registered S3 method overwritten by 'MoMAColors': #>   method        from      #>   print.palette MetBrewer #> Registered S3 method overwritten by 'PrettyCols': #>   method        from       #>   print.palette MoMAColors eusilc_dist_d$graph #> Warning: Removed 1 rows containing missing values (`geom_text()`).  eusilc_dist_d$tab #> # A tibble: 21 × 9 #> # Groups:   pb220a [3] #>    pb220a pl030_rec    prop prop_low prop_upp n_sample n_weighted n_weighted_low #>    <fct>  <fct>       <dbl>    <dbl>    <dbl>    <int>      <dbl>          <dbl> #>  1 AT     Fulfillin… 0.0890  0.0840    0.0942     1036    548489.        516433. #>  2 AT     Permanent… 0.0119  0.00931   0.0150      125     73270.         56226. #>  3 AT     Retired    0.285   0.275     0.295      3055   1754654.       1694827. #>  4 AT     Student    0.0602  0.0558    0.0650      693    371222.        341944. #>  5 AT     Unemployed 0.0388  0.0351    0.0427      411    238841.        215788. #>  6 AT     Working f… 0.421   0.412     0.431      4689   2595137.       2526927. #>  7 AT     Working p… 0.0942  0.0889    0.0998     1064    580514.        546750. #>  8 EU     Fulfillin… 0.124   0.0886    0.167        38     20343.         13863. #>  9 EU     Permanent… 0.0498  0.0280    0.0810       15      8186.          4024. #> 10 EU     Retired    0.155   0.115     0.202        45     25429.         17953. #> # ℹ 11 more rows #> # ℹ 1 more variable: n_weighted_upp <dbl>"},{"path":"/reference/esth_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"esth_graph — esth_graph","title":"esth_graph — esth_graph","text":"Function construct graphic following aestetics function function package table","code":""},{"path":"/reference/esth_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"esth_graph — esth_graph","text":"","code":"esth_graph(   tab,   var,   value,   facet_var = NULL,   reorder = F,   error_low = NULL,   error_upp = NULL,   n_var = NULL,   show_value = TRUE,   name_total = NULL,   scale = 1,   digits = 2,   unit = \"\",   dec = \",\",   fill = \"indianred4\",   dodge = 0.9,   font = \"Roboto\",   wrap_width_y = 25,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   caption = NULL )"},{"path":"/reference/esth_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"esth_graph — esth_graph","text":"tab Table variables ploted. var variable tab labels indicators ploted. value variable tab indicators ploted. facet_var variable tab defining faceting group, applicable. Default NULL. reorder TRUE want reorder var according value. FALSE want reorder. Default FALSE. error_low variable tab lower bound confidence interval. either error_low error_upp NULL error bars shown graphic. error_upp variable tab upper bound confidence interval. either error_low error_upp NULL error bars shown graphic. n_var variable tab containing number observation per indicator. Default NULL, showing number observation plot. show_value TRUE want show values value graphic. FALSE want show proportion. Default TRUE. name_total Name total bar graphic. scale Denominator proportion. Default 100 interprets numbers percentages. digits Numbers digits showed values labels graphic. Default 0. unit unit showd plot. Default percent. dec Decimal mark shown graphic. Default \",\" fill Colour bars. dodge Width bar, 0 1. font Font used graphic. Available fonts, included package , \"Roboto\", \"Montserrat\" \"Gotham Narrow\". Default \"Roboto\". wrap_width_y Number characters going line. Applies labels var. Default 25. title Title graphic. subtitle Subtitle graphic. xlab X label graphic. coord_flip() used graphic, xlab refers x label graphic, coord_flip(), var tab. ylab Y label graphic. coord_flip() used graphic, ylab refers y label graphic, coord_flip(), value tab. caption Caption graphic.","code":""},{"path":"/reference/load_and_active_fonts.html","id":null,"dir":"Reference","previous_headings":"","what":"load_and_active_fonts — load_and_active_fonts","title":"load_and_active_fonts — load_and_active_fonts","text":"Fonction pour charger et activer les polices de fonctionr","code":""},{"path":"/reference/load_and_active_fonts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load_and_active_fonts — load_and_active_fonts","text":"","code":"load_and_active_fonts()"},{"path":"/reference/many_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"many_prop — many_prop","title":"many_prop — many_prop","text":"many_prop","code":""},{"path":"/reference/many_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"many_prop — many_prop","text":"","code":"many_prop(   data,   list_vars,   list_vars_lab = NULL,   facet_var = NULL,   filter_exp = NULL,   ...,   prop_method = \"beta\",   reorder = FALSE,   show_ci = T,   show_n = FALSE,   show_value = TRUE,   show_lab = TRUE,   scale = 100,   digits = 0,   unit = \"%\",   dec = \",\",   fill = \"mediumseagreen\",   dodge = 0.9,   font = \"Roboto\",   wrap_width_y = 25,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   caption = NULL,   export_path = NULL )"},{"path":"/reference/many_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"many_prop — many_prop","text":"data dataframe object survey package object srvyr package. list_vars vector containing names dummy variables compute proportions list_vars_lab names variables facet_var variable defining faceting group. filter_exp expression filters data, preserving design. ... options possible as_survey_design srvyr package. prop_method Type proportion method use. See svyciprop survey package details. Default beta method. reorder TRUE want reorder variables according proportion. show_ci TRUE want show error bars graphic. FALSE want show error bars. show_n TRUE want show graphic number individuals sample group. FALSE want show number. Default FALSE. show_value TRUE want show proportion group graphic. FALSE want show proportion. show_lab TRUE want show axes, titles caption labels. FALSE want show label axes titles. Default TRUE. scale Denominator proportion. Default 100 interprets numbers percentages. digits Numbers digits showed values labels graphic. Default 0. unit Unit showed graphic. Default percent. dec Decimal mark shown graphic. Default \",\" fill Colour bars. dodge Width bar, 0 1. font Font used graphic. Available fonts, included package , \"Roboto\", \"Montserrat\" \"Gotham Narrow\". Default \"Roboto\". wrap_width_y Number characters going line. Applies labels groups. Default 25. title Title graphic. subtitle Subtitle graphic. xlab X label graphic. coord_flip() used graphic, xlab refers x label graphic, coord_flip(), x variable data. ylab Y label graphic. coord_flip() used graphic, xlab refers x label graphic, coord_flip(), x variable data. caption Caption graphic. export_path Path export results xlsx file. file includes two sheets : table graphic.","code":""},{"path":"/reference/many_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"many_prop — many_prop","text":"","code":"# Loading of data data(eusilc, package = \"laeken\")  # Recoding variables eusilc$worker <- 0 eusilc$worker[eusilc$pl030 == \"1\"]<-1 eusilc$worker[eusilc$pl030 == \"2\"]<-1 eusilc$austrian<-0 eusilc$austrian[eusilc$pb220a == \"AT\"]<-1  # Computation, taking sample design into account eusilc_many_prop <- many_prop( eusilc, list_vars = c(worker,austrian), list_vars_lab = c(\"% of workers\",\"% of Austrian\"), facet_var = rb090, strata = db040, ids = db030, weight = rb050, title = \"Proportion of workers and Autrian according to gender\", subtitle = \"Example with austrian SILC data from 'laeken' package\" ) #> Variable(s) entrées : worker, austrian #> Input: data.frame #> Sampling design -> ids:  db030, strata:  db040, weights:  rb050 #> 0 lignes supprimées avec valeur(s) manquante(s) pour le(s) variable(s) entrées eusilc_many_prop$graph  eusilc_many_prop$tab #> # A tibble: 4 × 12 #>   rb090  list_col       prop prop_low prop_upp n_sample n_true_weighted #>   <fct>  <fct>         <dbl>    <dbl>    <dbl>    <int>           <dbl> #> 1 male   % of workers  0.495    0.484    0.506     7267        1969092. #> 2 female % of workers  0.366    0.355    0.376     7560        1536897. #> 3 male   % of Austrian 0.739    0.728    0.750     7267        2942211. #> 4 female % of Austrian 0.766    0.756    0.777     7560        3219916. #> # ℹ 5 more variables: n_true_weighted_low <dbl>, n_true_weighted_upp <dbl>, #> #   n_tot_weighted <dbl>, n_tot_weighted_low <dbl>, n_tot_weighted_upp <dbl>"},{"path":"/reference/many_prop_group.html","id":null,"dir":"Reference","previous_headings":"","what":"many_prop_group — many_prop_group","title":"many_prop_group — many_prop_group","text":"many_prop_group","code":""},{"path":"/reference/many_prop_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"many_prop_group — many_prop_group","text":"","code":"many_prop_group(   data,   group,   bin_vars,   facet_var = NULL,   filter_exp = NULL,   prop_method = \"beta\",   ...,   unit = \"%\",   caption = NULL,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   scale = 100,   digits = 0,   show_labs = TRUE,   show_n = FALSE,   show_value = TRUE,   dodge = 0.9,   pretty_pal = \"Hokusai1\",   direction = 1,   error_bar = T,   na.rm.group = T,   font = \"Roboto\",   wrap_width = 25 )"},{"path":"/reference/many_prop_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"many_prop_group — many_prop_group","text":"data dataframe object survey package object srvyr package. group variable defining groups compared. bin_vars vector containing names dummy variables compute proportions facet_var variable defining faceting group. filter_exp expression filters data, preserving design. prop_method Type proportion method use. See svyciprop survey package details. Default beta method. ... options possible as_survey_design srvyr package. unit Unit showed graphic. Default percent. caption Caption graphic. title Title graphic. subtitle Subtitle graphic. xlab X label graphic. coord_flip() used graphic, xlab refers x label graphic, coord_flip(), x variable data. ylab Y label graphic. coord_flip() used graphic, xlab refers x label graphic, coord_flip(), x variable data. scale Denominator proportion. Default 100 interprets numbers percentages. digits Numbers digits showed values labels graphic. Default 0. show_labs TRUE want show axes, titles caption labels. FALSE want show label axes titles. Default TRUE. show_n TRUE want show graphic number individuals sample group. FALSE want show number. Default FALSE. show_value TRUE want show proportion group graphic. FALSE want show proportion. dodge Width bar, 0 1. pretty_pal Color palette used graphic. palettes packages MetBrewer, MoMAColors PrettyCols available. direction Direction palette color. Default 1. opposite direction -1. error_bar TRUE want show error bars graphic. FALSE want show error bars. na.rm.group TRUE want remove observations NA group variable NA facet variable. FALSE want create group NA value group variable facet NA value facet variable. NA variables included prop_exp affected argument. observation NA variables included prop_exp excluded. font Font used graphic. Available fonts, included package , \"Roboto\", \"Montserrat\" \"Gotham Narrow\". Default \"Roboto\". wrap_width Number characters going line. Applies labels groups. Default 25.","code":""},{"path":"/reference/many_val_group.html","id":null,"dir":"Reference","previous_headings":"","what":"many_val_group — many_val_group","title":"many_val_group — many_val_group","text":"many_val_group","code":""},{"path":"/reference/many_val_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"many_val_group — many_val_group","text":"","code":"many_val_group(   data,   group,   list_vars,   type,   list_vars_lab = NULL,   facet_var = NULL,   filter_exp = NULL,   ...,   na.rm.group = T,   prop_method = \"beta\",   position = \"dodge\",   show_ci = T,   show_n = FALSE,   show_value = TRUE,   show_lab = TRUE,   scale = NULL,   digits = 0,   unit = NULL,   dec = \",\",   pretty_pal = \"Egypt\",   direction = 1,   dodge = 0.9,   font = \"Roboto\",   wrap_width_y = 25,   wrap_width_leg = 25,   legend_ncol = 4,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   legend_lab = NULL,   caption = NULL,   export_path = NULL )  many_prop_group(..., type = \"prop\")  many_median_group(..., type = \"median\")  many_mean_group(..., type = \"mean\")"},{"path":"/reference/many_val_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"many_val_group — many_val_group","text":"data dataframe object survey package object srvyr package. group variable defining groups compared. list_vars vector containing names dummy variables compute proportions type \"mean\" compute means group ; \"median\" compute medians group ; \"prop\" compute medians group. list_vars_lab names variables facet_var variable defining faceting group. filter_exp expression filters data, preserving design. ... options possible as_survey_design srvyr package. na.rm.group TRUE want remove observations NA group variable NA facet variable. FALSE want create group NA value group variable facet NA value facet variable. NA variables included prop_exp affected argument. observation NA variables included prop_exp excluded. prop_method Type proportion method use. See svyciprop survey package details. Default beta method. position Position adjustment geom_bar show_ci TRUE want show error bars graphic. FALSE want show error bars. show_n TRUE want show graphic number individuals sample group. FALSE want show number. Default FALSE. show_value TRUE want show proportion group graphic. FALSE want show proportion. show_lab TRUE want show axes, titles caption labels. FALSE want show label axes titles. Default TRUE. scale Denominator proportion. Default 100 interprets numbers percentages. digits Numbers digits showed values labels graphic. Default 0. unit Unit showed graphic. Default percent. dec Decimal mark shown graphic. Default \",\" pretty_pal Color palette used graphic. palettes packages MetBrewer, MoMAColors PrettyCols available. direction Direction palette color. Default 1. opposite direction -1. dodge Width bar, 0 1. font Font used graphic. Available fonts, included package , \"Roboto\", \"Montserrat\" \"Gotham Narrow\". Default \"Roboto\". wrap_width_y Number characters going line. Applies labels groups. Default 25. wrap_width_leg Number characters going line. Applies labels legend. Default 25. legend_ncol Number maximum colomn legend. Default 4. title Title graphic. subtitle Subtitle graphic. xlab X label graphic. coord_flip() used graphic, xlab refers x label graphic, coord_flip(), x variable data. ylab Y label graphic. coord_flip() used graphic, xlab refers x label graphic, coord_flip(), x variable data. legend_lab Legend (fill) label graphic. caption Caption graphic. export_path Path export results xlsx file. file includes two sheets : table graphic.","code":""},{"path":"/reference/many_val_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"many_val_group — many_val_group","text":"","code":"# Loading of data data(eusilc, package = \"laeken\")  # Recoding variables eusilc$worker <- 0 eusilc$worker[eusilc$pl030 == \"1\"]<-1 eusilc$worker[eusilc$pl030 == \"2\"]<-1 eusilc$austrian<-0 eusilc$austrian[eusilc$pb220a == \"AT\"]<-1  # Computation, taking sample design into account eusilc_many_mean_group <- many_mean_group( eusilc, group = rb090, list_vars = c(py010n,py050n,py090n,py100n), list_vars_lab = c(\"Wage\",\"Self-employement income\",\"unemployement benefit\",\"pension\"), strata = db040, ids = db030, weight = rb050, title = \"Average incomes according to gender\", subtitle = \"Example with austrian SILC data from 'laeken' package\" ) #> Variable(s) entrées : py010n, py050n, py090n, py100n #> Input: data.frame #> Sampling design -> ids:  db030, strata:  db040, weights:  rb050 #> 2720 lignes supprimées avec valeur(s) manquante(s) pour le(s) variable(s) entrées eusilc_many_mean_group$graph  eusilc_many_mean_group$tab #> # A tibble: 8 × 9 #>   rb090  list_col      mean mean_low mean_upp n_sample n_weighted n_weighted_low #>   <fct>  <fct>        <dbl>    <dbl>    <dbl>    <int>      <dbl>          <dbl> #> 1 male   Wage        12445.   12102.   12787.     5844   3237897.       3178503. #> 2 female Wage         6136.    5902.    6370.     6263   3519368.       3470221. #> 3 male   Self-emplo…  1539.    1369.    1710.     5844   3237897.       3178503. #> 4 female Self-emplo…   689.     600.     778.     6263   3519368.       3470221. #> 5 male   unemployem…   420.     371.     469.     5844   3237897.       3178503. #> 6 female unemployem…   431.     387.     475.     6263   3519368.       3470221. #> 7 male   pension      4123.    3894.    4353.     5844   3237897.       3178503. #> 8 female pension      3438.    3254.    3623.     6263   3519368.       3470221. #> # ℹ 1 more variable: n_weighted_upp <dbl>"},{"path":"/reference/pivot_longer_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"pivot_longer_survey — pivot_longer_survey","title":"pivot_longer_survey — pivot_longer_survey","text":"Function pivot wide long agregated data group produced srvyr::summarise","code":""},{"path":"/reference/pivot_longer_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pivot_longer_survey — pivot_longer_survey","text":"","code":"pivot_longer_survey(data, n_groups)"},{"path":"/reference/pivot_longer_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pivot_longer_survey — pivot_longer_survey","text":"data dataframe Agregated data pivot n_groups Number groups data agregated","code":""},{"path":"/reference/pivot_longer_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pivot_longer_survey — pivot_longer_survey","text":"dataframe","code":""},{"path":"/reference/prop_group.html","id":null,"dir":"Reference","previous_headings":"","what":"prop_group — prop_group","title":"prop_group — prop_group","text":"Function compare proportions different groups complex survey data. produces table, graphic statistical test.","code":""},{"path":"/reference/prop_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prop_group — prop_group","text":"","code":"prop_group(   data,   group,   prop_exp,   facet_var = NULL,   filter_exp = NULL,   ...,   na.rm.group = T,   na.var = \"rm\",   prop_method = \"beta\",   reorder = F,   show_ci = T,   show_n = FALSE,   show_value = TRUE,   show_lab = TRUE,   total_name = \"Total\",   scale = 100,   digits = 0,   unit = \"%\",   dec = \",\",   fill = \"deepskyblue3\",   dodge = 0.9,   font = \"Roboto\",   wrap_width_y = 25,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   caption = NULL,   export_path = NULL )"},{"path":"/reference/prop_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prop_group — prop_group","text":"data dataframe object survey package object srvyr package. group variable defining groups compared. prop_exp expression define proportion computed. facet_var variable defining faceting group. filter_exp expression filters data, preserving design. ... options possible as_survey_design srvyr package. na.rm.group TRUE want remove observations NA group variable NA facet variable. FALSE want create group NA value group variable facet NA value facet variable. NA variables included prop_exp affected argument. observation NA variables included prop_exp excluded. na.var \"rm\" remove NA variables used prop_exp computing proportions, \"include\" compute proportions NA's denominators. Default \"rm\". \"rm\" NA allowed prop_exp prop_method Type proportion method use. See svyciprop survey package details. Default beta method. reorder TRUE want reorder groups according proportion. NA value, case na.rm.group = FALSE, included reorder. show_ci TRUE want show error bars graphic. FALSE want show error bars. show_n TRUE want show graphic number individuals sample group. FALSE want show number. Default FALSE. show_value TRUE want show proportion group graphic. FALSE want show proportion. show_lab TRUE want show axes, titles caption labels. FALSE want show label axes titles. Default TRUE. total_name Name total shown graphic. Default \"Total\". scale Denominator proportion. Default 100 interprets numbers percentages. digits Numbers digits showed values labels graphic. Default 0. unit Unit showed graphic. Default percent. dec Decimal mark shown graphic. Default \",\" fill Colour bars. NA bar, case na.rm.group = FALSE, total bar always grey. dodge Width bar, 0 1. font Font used graphic. Available fonts, included package , \"Roboto\", \"Montserrat\" \"Gotham Narrow\". Default \"Roboto\". wrap_width_y Number characters going line. Applies labels groups. Default 25. title Title graphic. subtitle Subtitle graphic. xlab X label graphic. coord_flip() used graphic, xlab refers x label graphic, coord_flip(), x variable data. ylab Y label graphic. coord_flip() used graphic, xlab refers x label graphic, coord_flip(), x variable data. caption Caption graphic. export_path Path export results xlsx file. file includes two sheets : table graphic.","code":""},{"path":"/reference/prop_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prop_group — prop_group","text":"list contains table, graphic statistical test","code":""},{"path":"/reference/prop_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"prop_group — prop_group","text":"","code":"# Loading of data data(eusilc, package = \"laeken\")  # Recoding eusilc$pl030 into eusilc$pl030_rec eusilc$pl030_rec <- NA eusilc$pl030_rec[eusilc$pl030 == \"1\"] <- \"Working full time\" eusilc$pl030_rec[eusilc$pl030 == \"2\"] <- \"Working part time\" eusilc$pl030_rec[eusilc$pl030 == \"3\"] <- \"Unemployed\" eusilc$pl030_rec[eusilc$pl030 == \"4\"] <- \"Student\" eusilc$pl030_rec[eusilc$pl030 == \"5\"] <- \"Retired\" eusilc$pl030_rec[eusilc$pl030 == \"6\"] <- \"Permanently disabled\" eusilc$pl030_rec[eusilc$pl030 == \"7\"] <- \"Fulfilling domestic tasks\"  # Computation, taking sample design into account eusilc_prop <- prop_group( eusilc, group = pl030_rec, prop_exp = py090n > 0, strata = db040, ids = db030, weight = rb050, title = \"% of ind. receiving unemployment benefits in their hh\", subtitle = \"Example with austrian SILC data from 'laeken' package\" ) #> Input: data.frame #> Sampling design -> ids:  db030, strata:  db040, weights:  rb050 #> Variable(s) détectée(s) dans l'expression : py090n #> 0 lignes supprimées avec valeur(s) manquante(s) pour le(s) variable(s) de l'expression eusilc_prop$graph"},{"path":"/reference/theme_fonctionr.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_fonctionr — theme_fonctionr","title":"theme_fonctionr — theme_fonctionr","text":"theme_fonctionr","code":""},{"path":"/reference/theme_fonctionr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_fonctionr — theme_fonctionr","text":"","code":"theme_fonctionr(font = font)"},{"path":"/reference/theme_fonctionr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme_fonctionr — theme_fonctionr","text":"font Font used graphic. Available fonts, included package , \"Roboto\", \"Montserrat\" \"Gotham Narrow\". Default \"Roboto\".","code":""}]
